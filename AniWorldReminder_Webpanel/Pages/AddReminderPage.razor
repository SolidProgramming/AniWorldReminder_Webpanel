@inject IApiService ApiService
@inject NavigationManager NavigationManager
@page "/addreminder"

<PageTitle>Reminder hinzufügen</PageTitle>

<EditForm Model="@Reminder" OnValidSubmit="@(() => SearchSeries())">
    <DataAnnotationsValidator />
    <div class="container">
        <h3>Reminder hinzufügen</h3>
        <div class="row mt-5">
            <div class="col-md-6">
                <HxInputText Label="HxInputText" @bind-Value="@Reminder.SeriesName" Placeholder="Serien Name" />
            </div>
            <div class="col mt-3">
                <HxCheckbox Text="German Dubbed" CssClass="pb-1" @bind-Value="@LangGerDub" />
                <HxCheckbox Text="German Subbed" @bind-Value="@LangGerSub" />
            </div>
            <div class="col mt-3">
                <HxCheckbox Text="English Dubbed" CssClass="pb-1" @bind-Value="@LangEngDub" />
                <HxCheckbox Text="English Subbed" @bind-Value="@LangEngSub" />
            </div>
        </div>
        <div class="row">
            <div class="col">
                <HxSubmit Color="ThemeColor.Primary" CssClass="mt-5 w-100" Spinner="Loading" Enabled="@(!Loading)">Serie suchen</HxSubmit>
            </div>
        </div>
        @if (SearchResults is not null && SearchResults.Any())
        {
            <SeriesSearchResultsComponent SearchResults="@SearchResults"></SeriesSearchResultsComponent>
        }
    </div>
</EditForm>
@code {

    private bool Loading { get; set; }

    private bool LangGerDub { get; set; }
    private bool LangGerSub { get; set; }
    private bool LangEngDub { get; set; }
    private bool LangEngSub { get; set; }

    private ReminderModel Reminder = new();
    private List<SearchResultModel>? SearchResults;

    private async Task SearchSeries()
    {
        Loading = true;

        List<SearchResultModel>? searchResults = await ApiService.GetAsync<List<SearchResultModel>?>("getSeries", new() { { "seriesName", Reminder.SeriesName } });

        Loading = false;

        if (searchResults is null || !searchResults.Any())
            return;

        SearchResults = searchResults;
    }

    private List<string> GetLanguages()
    {
        List<string> languages = new();

        if (LangGerDub)
        {
            languages.Add("GerDub");
        }

        if (LangGerSub)
        {
            languages.Add("GerSub");
        }

        if (LangEngDub)
        {
            languages.Add("EngDub");
        }

        if (LangEngSub)
        {
            languages.Add("EngSub");
        }

        return languages;
    }
}
