@inject IAuthenticationService AuthService
@inject IApiService ApiService

<HxSidebar CssClass="sticky-top">
    <HeaderTemplate>
        <div class="userWrap">
            <div class="user-image">
                <img src="https://i.pravatar.cc/75" alt="">
            </div>
            <span>@Username</span>
        </div>
    </HeaderTemplate>
    <ItemsTemplate>
        <HxSidebarItem Icon="BootstrapIcon.Person" Href="/" CssClass="pb-4">
            <ContentTemplate>
                Profil
            </ContentTemplate>
        </HxSidebarItem>
        <HxSidebarItem Icon="BootstrapIcon.Columns" Href="/dashboard">
            <ContentTemplate>
                Dashboard
            </ContentTemplate>
        </HxSidebarItem>
        <HxSidebarItem Icon="BootstrapIcon.PlusCircle" Href="@Routes.Search">
            <ContentTemplate>
                Reminder
                <HxBadge Color="ThemeColor.Secondary" CssClass="ms-2">
                    @if (UserSeries is not null && UserSeries.Any())
                    {
                        @UserSeries.Count
                    }
                </HxBadge>
            </ContentTemplate>
        </HxSidebarItem>

        <HxSidebarItem Icon="BootstrapIcon.BoxArrowLeft" CssClass="mt-5 text-danger" Href="/logout">
            <ContentTemplate>
                Ausloggen
            </ContentTemplate>
        </HxSidebarItem>
        <HxSidebarItem Icon="BootstrapIcon.Gear" Href="/" CssClass="border-top pt-2 text-warning">
            <ContentTemplate>
                Einstellungen
            </ContentTemplate>
        </HxSidebarItem>
    </ItemsTemplate>
    <TogglerTemplate></TogglerTemplate>
</HxSidebar>

@code {
    private string? Username { get; set; }

    private List<SeriesModel>? UserSeries;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await RefreshUserSeries();
        }

        await base.OnAfterRenderAsync(firstRender);
    }

    private async Task RefreshUserSeries()
    {
        UserSeries = await ApiService.GetAsync<List<SeriesModel>?>("getAllUserSeries", new() { { "username", AuthService?.User?.Username! } });
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        Username = AuthService?.User?.Username;
        StateHasChanged();

        base.OnInitialized();
    }
}